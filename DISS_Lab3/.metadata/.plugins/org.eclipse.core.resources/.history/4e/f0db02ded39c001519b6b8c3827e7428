package de.tuhh.diss.warehouse;

import de.tuhh.diss.warehouse.sim.HighBayWarehouse;
import de.tuhh.diss.warehouse.sim.PhysicalWarehouse;
import de.tuhh.diss.warehouse.sim.StorageException;
import de.tuhh.diss.warehouse.sim.StoragePlace;

public class WarehouseManagement implements HighBayWarehouse {
	private CraneControl crane;
	private PhysicalWarehouse warehouse;
	
	public WarehouseManagement(PhysicalWarehouse warehouse){
		this.warehouse = warehouse;
		this.crane = new CraneControl(this.warehouse.getCrane());
	}
	
	
	private Slot getBestStoragePlace(Packet packet){
		StoragePlace[] storagePlaces = this.warehouse.getStoragePlacesAsArray();
		int currentVolumeOffset =1000;
		for( int i=0; i< storagePlaces.length; i++){
			if(){
				return (Slot)storagePlaces[i];
			}
			
		}
	}
	
	public int storePacket(int width, int height, int depth, String description) throws StorageException {
		Packet packet = new Packet();
		return this.crane.storePacket(x, y, packet);
	}
	
	public void retrievePacket(int id) throws StorageException {

	}
	
	public Packet[] getPackets() {
		return null; // TODO: Replace this with your own code. 
	}
	
	public void shutdown() {
	crane.shutdown();
	}
}
